import streamlit as st
import pandas as pd
import os
from pathlib import Path
import shutil
import time

REPORT_PATH = 'reports/report.pdf'
DETECTIONS_DIR = Path("detections")

# ----- –°–∞–π–¥–±–∞—Ä -----
st.sidebar.title("–ü–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è")

# –ö–Ω–æ–ø–∫–∏ —Å—Ç–∞—Ä—Ç/—Å—Ç–æ–ø (–ª–æ–≥–∏–∫–∞ –±—É–¥–µ—Ç —Ç–≤–æ—è)
if st.sidebar.button("‚ñ∂ Start"):
    st.write("–ó–∞–ø—É—Å–∫ –ø—Ä–æ—Ü–µ—Å—Å–∞...")  # –≤—Å—Ç–∞–≤—å —Å–≤–æ—é —Ñ—É–Ω–∫—Ü–∏—é

if st.sidebar.button("‚èπ Stop"):
    st.write("–û—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–æ—Ü–µ—Å—Å–∞...")  # –≤—Å—Ç–∞–≤—å —Å–≤–æ—é —Ñ—É–Ω–∫—Ü–∏—é

# –û—á–∏—Å—Ç–∫–∞ –ø–∞–ø–∫–∏ detections
if st.sidebar.button("üóë –û—á–∏—Å—Ç–∏—Ç—å detections"):
    if DETECTIONS_DIR.exists():
        shutil.rmtree(DETECTIONS_DIR)
        DETECTIONS_DIR.mkdir(exist_ok=True)
        st.sidebar.success("–ü–∞–ø–∫–∞ detections –æ—á–∏—â–µ–Ω–∞")

# –í—ã–±–æ—Ä FPS –æ–±—Ä–∞–±–æ—Ç–∫–∏
fps_option = st.sidebar.slider("–û–±—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –∫–∞–∂–¥—ã–π N-–π –∫–∞–¥—Ä", min_value=1, max_value=10, value=1)

# –ö–Ω–æ–ø–∫–∞ —Å–∫–∞—á–∞—Ç—å –æ—Ç—á–µ—Ç
if os.path.exists(REPORT_PATH):
    with open(REPORT_PATH, "rb") as f:
        st.sidebar.download_button(
            label="üì• –°–∫–∞—á–∞—Ç—å –æ—Ç—á–µ—Ç",
            data=f,
            file_name=os.path.basename(REPORT_PATH),
            mime="application/pdf"
        )

# ----- –¶–µ–Ω—Ç—Ä–∞–ª—å–Ω–∞—è —á–∞—Å—Ç—å -----
st.title("–ü—Ä–∏–º–µ—Ä –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞")
st.write("–ù–∏–∂–µ —Ç–∞–±–ª–∏—Ü–∞ —Å –¥–∞–Ω–Ω—ã–º–∏:")

# –ü—Ä–∏–º–µ—Ä –¥–∞–Ω–Ω—ã—Ö (—Ç—ã –±—É–¥–µ—à—å –∏—Ö –Ω–∞–ø–æ–ª–Ω—è—Ç—å –∏–∑ –¥–µ—Ç–µ–∫—Ç–æ—Ä–∞)
data = {
    "–ò–º—è": ["–ò–≤–∞–Ω", "–ú–∞—Ä–∏—è", "–ü–µ—Ç—Ä"],
    "–í–æ–∑—Ä–∞—Å—Ç": [25, 30, 22],
    "–ì–æ—Ä–æ–¥": ["–ú–æ—Å–∫–≤–∞", "–°–ü–±", "–ö–∞–∑–∞–Ω—å"]
}
df = pd.DataFrame(data)
st.dataframe(df)

# ----- –ü–æ—Å–ª–µ–¥–Ω–µ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏–∑ detections -----
st.subheader("–ü–æ—Å–ª–µ–¥–Ω–µ–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–∏–µ")
if DETECTIONS_DIR.exists() and any(DETECTIONS_DIR.iterdir()):
    latest_file = max(DETECTIONS_DIR.glob("*.jpg"), key=os.path.getctime)
    st.image(str(latest_file), caption=f"–ü–æ—Å–ª–µ–¥–Ω–∏–π –∫–∞–¥—Ä: {latest_file.name}")
else:
    st.info("–ù–µ—Ç —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω—ã—Ö –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –≤ –ø–∞–ø–∫–µ detections")

# ----- –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –ø–æ –æ–±—ä–µ–∫—Ç–∞–º -----
st.subheader("–ü–æ—Å–ª–µ–¥–Ω–∏–µ –æ–±—ä–µ–∫—Ç—ã")
# –ü—Ä–∏–º–µ—Ä —Å—Ç—Ä—É–∫—Ç—É—Ä—ã (–∑–∞–º–µ–Ω–∏ –Ω–∞ —Ä–µ–∞–ª—å–Ω—É—é –∏–∑ –¥–µ—Ç–µ–∫—Ç–æ—Ä–∞)
objects_data = [
    {"–ö–ª–∞—Å—Å": "person", "Confidence": 0.95, "ID": 1, "–í—Ä–µ–º—è": "12:34:56"},
    {"–ö–ª–∞—Å—Å": "dog", "Confidence": 0.87, "ID": 2, "–í—Ä–µ–º—è": "12:34:58"},
]
objects_df = pd.DataFrame(objects_data)
st.dataframe(objects_df)

# ----- –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ–±—ä–µ–∫—Ç–æ–≤ –ø–æ –∫–ª–∞—Å—Å–∞–º -----
st.subheader("–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –∫–ª–∞—Å—Å–∞–º")
class_counts = objects_df['–ö–ª–∞—Å—Å'].value_counts().reset_index()
class_counts.columns = ['–ö–ª–∞—Å—Å', '–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ']
st.table(class_counts)
